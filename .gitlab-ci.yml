stages:
  - build
  - test
  - deploy

variables:
  DOCKER_PULL_SECRET: pride-gitlab-docker-secret
  IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  app_name: pride-mcp-server
  k8s_namespace: pride-mcp
  k8s_replicas: 2

docker_build:
  variables:
    DOCKER_TLS_CERTDIR: ""
  image: docker:24.0.5
  stage: build
  services:
    - docker:27.1.2-dind
  script:
    - apk add --update bash gettext tzdata coreutils wget curl
    - cat Dockerfile
    - echo $CI_REGISTRY_IMAGE $CI_COMMIT_REF_SLUG $CI_COMMIT_SHA
    - docker --debug info
    - docker build --build-arg HTTP_PROXY=$HTTP_PROXY --build-arg HTTPS_PROXY=$HTTPS_PROXY --build-arg http_proxy=$http_proxy --build-arg https_proxy=$https_proxy --build-arg NO_PROXY=$NO_PROXY -t $IMAGE .
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $IMAGE
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

kube_deploy_prod:
  environment: prod-k8s
  extends: .kube_deploy_script

.kube_deploy_script:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - apk add --update bash gettext tzdata coreutils
    - mkdir -p ~/.kube
    - echo $KUBE_CONFIG > kubeconfig
    - base64 -d kubeconfig > ~/.kube/config
    - kubectl config get-contexts
    - kubectl create namespace $k8s_namespace || true
    - kubectl -n $k8s_namespace delete secret $DOCKER_PULL_SECRET || true
    - echo $CI_REGISTRY $CI_DEPLOY_USER
    - kubectl -n $k8s_namespace create secret docker-registry $DOCKER_PULL_SECRET --docker-server=$CI_REGISTRY --docker-username=$CI_DEPLOY_USER --docker-password=$CI_DEPLOY_PASSWORD
    - envsubst < .kubernetes.yml > kubernetes.yml
    - cat kubernetes.yml
    - kubectl -n $k8s_namespace apply -f kubernetes.yml
    - echo "Waiting for deployment to be ready..."
    - kubectl rollout status deployment/$app_name -n $k8s_namespace
    - echo "âœ… Deployment completed successfully"
  when: manual
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"' 